<!-- Robot nodes with parameters for simulation. -->
<launch>
<arg name="robot"/>
<arg name="method"/>
<arg name="robot_id" value="$(eval arg('robot') - 1)"/>

<param name="tf_prefix" type="string" value="robot_$(arg robot_id)"/>

<rosparam command="load" file="$(find int_preservation)/param/ros.yaml" subst_value="true"/>

<!-- <node name="map_align" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 map odom 100"/> -->

<node name="robot_nav" pkg="int_preservation" type="robot_navigator.py">
    <param name="robot_id" value="$(arg robot_id)" />
</node>

<node pkg="nav2d_operator" type="operator" name="operator" output="screen">
    <rosparam command="load" file="$(find int_preservation)/param/operator.yaml" subst_value="true"/>
    <rosparam command="load" file="$(find int_preservation)/param/costmap.yaml" ns="local_map" subst_value="true"/>
    <param name="robot_frame" value="base_link"/>
    <param name="odometry_frame" value="odom"/>
</node>

<node pkg="nav2d_navigator" type="navigator" name="navigator">
    <rosparam command="load" file="$(find int_preservation)/param/navigator.yaml" subst_value="true"/>
    <param name="robot_id" value="$(arg robot)"/>
</node>

<node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
<node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" />


<node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="false">
    <param name="odom_frame_id" value="robot_$(arg robot_id)/odom" />
    <param name="base_frame_id" value="robot_$(arg robot_id)/base_link" />
</node>

<node name="$(arg method)" pkg="int_preservation" type="$(arg method).py">
    <param name="robot_id" value="$(arg robot_id)"/>
</node>
</launch>
